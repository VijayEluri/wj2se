	/**
	 * <pre>
	 * the functionality is to link reversely between pre and head. 
	 * and when head is null, return the pre as the head
	 * </pre>
	 * @param pre
	 * @param head
	 * @return 
	 */
	static Node reverseByRecursive(Node pre, Node head){
		//return reversed head
		if(head == null){
			return pre;
		}
		
		Node next = head.next;
		System.out.println("link from [ "+head.value + "] to ["+(pre==null?"null":pre.value)+"]");
		head.next = pre;
		
		return reverseByRecursive(head, next);
	}
	
	static Node reverseLinkedListByIterative(Node head){
		//state variables
		Node pre = null;
		Node next = null;
		while (head != null) {
			next = head.next;
			head.next = pre;
			pre = head;
			head = next;
		}

		return pre;
	}